There are two sorted arrays nums1 and nums2 of size m and n respectively.

Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).

You may assume nums1 and nums2 cannot be both empty.
Example 1:

nums1 = [1, 3]
nums2 = [2]

The median is 2.0
Example 2:

nums1 = [1, 2]
nums2 = [3, 4]

The median is (2 + 3)/2 = 2.5

解法，先判断有几个数，分类讨论。找中位数index的时候注意数字从1开始但是index从0开始

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        i = 0 
        a = (nums1 + nums2)
        a.sort()
        if (len(nums1)+len(nums2)) %2 == 1 :
            
            while i < (len(nums1)+len(nums2))/2:
                i += 1 
            median = a[i-1]
        if (len(nums1)+len(nums2)) %2 == 0 :
            while i <= (len(nums1)+len(nums2))/2:
                i += 1 
            median = (a[i-2] + a[i-1])/2             
            
                
        
        return median
